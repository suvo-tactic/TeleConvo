{"ast":null,"code":"/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\n\n/* global Reflect, Promise */\nvar extendStatics = function (d, b) {\n  extendStatics = Object.setPrototypeOf || {\n    __proto__: []\n  } instanceof Array && function (d, b) {\n    d.__proto__ = b;\n  } || function (d, b) {\n    for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n  };\n\n  return extendStatics(d, b);\n};\n\nfunction __extends(d, b) {\n  if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n  extendStatics(d, b);\n\n  function __() {\n    this.constructor = d;\n  }\n\n  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n}\n\nfunction __awaiter(thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n}\n\nfunction __generator(thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function () {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n\n        case 7:\n          op = _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n\n            _.ops.push(op);\n\n            break;\n          }\n\n          if (t[2]) _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n      }\n\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n}\n\nfunction __values(o) {\n  var s = typeof Symbol === \"function\" && Symbol.iterator,\n      m = s && o[s],\n      i = 0;\n  if (m) return m.call(o);\n  if (o && typeof o.length === \"number\") return {\n    next: function () {\n      if (o && i >= o.length) o = void 0;\n      return {\n        value: o && o[i++],\n        done: !o\n      };\n    }\n  };\n  throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n}\n\nfunction __read(o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n      r,\n      ar = [],\n      e;\n\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n\n  return ar;\n}\n\nfunction __spreadArray(to, from) {\n  for (var i = 0, il = from.length, j = to.length; i < il; i++, j++) to[j] = from[i];\n\n  return to;\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar Deferred = function () {\n  function Deferred() {\n    var _this = this;\n\n    this.reject = function () {};\n\n    this.resolve = function () {};\n\n    this.promise = new Promise(function (resolve, reject) {\n      _this.resolve = resolve;\n      _this.reject = reject;\n    });\n  }\n  /**\r\n   * Our API internals are not promiseified and cannot because our callback APIs have subtle expectations around\r\n   * invoking promises inline, which Promises are forbidden to do. This method accepts an optional node-style callback\r\n   * and returns a node-style callback which will resolve or reject the Deferred's promise.\r\n   */\n\n\n  Deferred.prototype.wrapCallback = function (callback) {\n    var _this = this;\n\n    return function (error, value) {\n      if (error) {\n        _this.reject(error);\n      } else {\n        _this.resolve(value);\n      }\n\n      if (typeof callback === 'function') {\n        // Attaching noop handler just in case developer wasn't expecting\n        // promises\n        _this.promise.catch(function () {}); // Some of our callbacks don't expect a value and our own tests\n        // assert that the parameter length is 1\n\n\n        if (callback.length === 1) {\n          callback(error);\n        } else {\n          callback(error, value);\n        }\n      }\n    };\n  };\n\n  return Deferred;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar ERROR_NAME = 'FirebaseError'; // Based on code from:\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error#Custom_Error_Types\n\nvar FirebaseError = function (_super) {\n  __extends(FirebaseError, _super);\n\n  function FirebaseError(code, message, customData) {\n    var _this = _super.call(this, message) || this;\n\n    _this.code = code;\n    _this.customData = customData;\n    _this.name = ERROR_NAME; // Fix For ES5\n    // https://github.com/Microsoft/TypeScript-wiki/blob/master/Breaking-Changes.md#extending-built-ins-like-error-array-and-map-may-no-longer-work\n\n    Object.setPrototypeOf(_this, FirebaseError.prototype); // Maintains proper stack trace for where our error was thrown.\n    // Only available on V8.\n\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(_this, ErrorFactory.prototype.create);\n    }\n\n    return _this;\n  }\n\n  return FirebaseError;\n}(Error);\n\nvar ErrorFactory = function () {\n  function ErrorFactory(service, serviceName, errors) {\n    this.service = service;\n    this.serviceName = serviceName;\n    this.errors = errors;\n  }\n\n  ErrorFactory.prototype.create = function (code) {\n    var data = [];\n\n    for (var _i = 1; _i < arguments.length; _i++) {\n      data[_i - 1] = arguments[_i];\n    }\n\n    var customData = data[0] || {};\n    var fullCode = this.service + \"/\" + code;\n    var template = this.errors[code];\n    var message = template ? replaceTemplate(template, customData) : 'Error'; // Service Name: Error message (service/code).\n\n    var fullMessage = this.serviceName + \": \" + message + \" (\" + fullCode + \").\";\n    var error = new FirebaseError(fullCode, fullMessage, customData);\n    return error;\n  };\n\n  return ErrorFactory;\n}();\n\nfunction replaceTemplate(template, data) {\n  return template.replace(PATTERN, function (_, key) {\n    var value = data[key];\n    return value != null ? String(value) : \"<\" + key + \"?>\";\n  });\n}\n\nvar PATTERN = /\\{\\$([^}]+)}/g;\n/**\r\n * Deep equal two objects. Support Arrays and Objects.\r\n */\n\nfunction deepEqual(a, b) {\n  if (a === b) {\n    return true;\n  }\n\n  var aKeys = Object.keys(a);\n  var bKeys = Object.keys(b);\n\n  for (var _i = 0, aKeys_1 = aKeys; _i < aKeys_1.length; _i++) {\n    var k = aKeys_1[_i];\n\n    if (!bKeys.includes(k)) {\n      return false;\n    }\n\n    var aProp = a[k];\n    var bProp = b[k];\n\n    if (isObject(aProp) && isObject(bProp)) {\n      if (!deepEqual(aProp, bProp)) {\n        return false;\n      }\n    } else if (aProp !== bProp) {\n      return false;\n    }\n  }\n\n  for (var _a = 0, bKeys_1 = bKeys; _a < bKeys_1.length; _a++) {\n    var k = bKeys_1[_a];\n\n    if (!aKeys.includes(k)) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction isObject(thing) {\n  return thing !== null && typeof thing === 'object';\n}\n/**\r\n * Component for service name T, e.g. `auth`, `auth-internal`\r\n */\n\n\nvar Component = function () {\n  /**\r\n   *\r\n   * @param name The public service name, e.g. app, auth, firestore, database\r\n   * @param instanceFactory Service factory responsible for creating the public interface\r\n   * @param type whether the service provided by the component is public or private\r\n   */\n  function Component(name, instanceFactory, type) {\n    this.name = name;\n    this.instanceFactory = instanceFactory;\n    this.type = type;\n    this.multipleInstances = false;\n    /**\r\n     * Properties to be added to the service namespace\r\n     */\n\n    this.serviceProps = {};\n    this.instantiationMode = \"LAZY\"\n    /* LAZY */\n    ;\n    this.onInstanceCreated = null;\n  }\n\n  Component.prototype.setInstantiationMode = function (mode) {\n    this.instantiationMode = mode;\n    return this;\n  };\n\n  Component.prototype.setMultipleInstances = function (multipleInstances) {\n    this.multipleInstances = multipleInstances;\n    return this;\n  };\n\n  Component.prototype.setServiceProps = function (props) {\n    this.serviceProps = props;\n    return this;\n  };\n\n  Component.prototype.setInstanceCreatedCallback = function (callback) {\n    this.onInstanceCreated = callback;\n    return this;\n  };\n\n  return Component;\n}();\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar DEFAULT_ENTRY_NAME$1 = '[DEFAULT]';\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Provider for instance for service name T, e.g. 'auth', 'auth-internal'\r\n * NameServiceMapping[T] is an alias for the type of the instance\r\n */\n\nvar Provider = function () {\n  function Provider(name, container) {\n    this.name = name;\n    this.container = container;\n    this.component = null;\n    this.instances = new Map();\n    this.instancesDeferred = new Map();\n    this.instancesOptions = new Map();\n    this.onInitCallbacks = new Map();\n  }\n  /**\r\n   * @param identifier A provider can provide mulitple instances of a service\r\n   * if this.component.multipleInstances is true.\r\n   */\n\n\n  Provider.prototype.get = function (identifier) {\n    // if multipleInstances is not supported, use the default name\n    var normalizedIdentifier = this.normalizeInstanceIdentifier(identifier);\n\n    if (!this.instancesDeferred.has(normalizedIdentifier)) {\n      var deferred = new Deferred();\n      this.instancesDeferred.set(normalizedIdentifier, deferred);\n\n      if (this.isInitialized(normalizedIdentifier) || this.shouldAutoInitialize()) {\n        // initialize the service if it can be auto-initialized\n        try {\n          var instance = this.getOrInitializeService({\n            instanceIdentifier: normalizedIdentifier\n          });\n\n          if (instance) {\n            deferred.resolve(instance);\n          }\n        } catch (e) {// when the instance factory throws an exception during get(), it should not cause\n          // a fatal error. We just return the unresolved promise in this case.\n        }\n      }\n    }\n\n    return this.instancesDeferred.get(normalizedIdentifier).promise;\n  };\n\n  Provider.prototype.getImmediate = function (options) {\n    var _a; // if multipleInstances is not supported, use the default name\n\n\n    var normalizedIdentifier = this.normalizeInstanceIdentifier(options === null || options === void 0 ? void 0 : options.identifier);\n    var optional = (_a = options === null || options === void 0 ? void 0 : options.optional) !== null && _a !== void 0 ? _a : false;\n\n    if (this.isInitialized(normalizedIdentifier) || this.shouldAutoInitialize()) {\n      try {\n        return this.getOrInitializeService({\n          instanceIdentifier: normalizedIdentifier\n        });\n      } catch (e) {\n        if (optional) {\n          return null;\n        } else {\n          throw e;\n        }\n      }\n    } else {\n      // In case a component is not initialized and should/can not be auto-initialized at the moment, return null if the optional flag is set, or throw\n      if (optional) {\n        return null;\n      } else {\n        throw Error(\"Service \" + this.name + \" is not available\");\n      }\n    }\n  };\n\n  Provider.prototype.getComponent = function () {\n    return this.component;\n  };\n\n  Provider.prototype.setComponent = function (component) {\n    var e_1, _a;\n\n    if (component.name !== this.name) {\n      throw Error(\"Mismatching Component \" + component.name + \" for Provider \" + this.name + \".\");\n    }\n\n    if (this.component) {\n      throw Error(\"Component for \" + this.name + \" has already been provided\");\n    }\n\n    this.component = component; // return early without attempting to initialize the component if the component requires explicit initialization (calling `Provider.initialize()`)\n\n    if (!this.shouldAutoInitialize()) {\n      return;\n    } // if the service is eager, initialize the default instance\n\n\n    if (isComponentEager(component)) {\n      try {\n        this.getOrInitializeService({\n          instanceIdentifier: DEFAULT_ENTRY_NAME$1\n        });\n      } catch (e) {// when the instance factory for an eager Component throws an exception during the eager\n        // initialization, it should not cause a fatal error.\n        // TODO: Investigate if we need to make it configurable, because some component may want to cause\n        // a fatal error in this case?\n      }\n    }\n\n    try {\n      // Create service instances for the pending promises and resolve them\n      // NOTE: if this.multipleInstances is false, only the default instance will be created\n      // and all promises with resolve with it regardless of the identifier.\n      for (var _b = __values(this.instancesDeferred.entries()), _c = _b.next(); !_c.done; _c = _b.next()) {\n        var _d = __read(_c.value, 2),\n            instanceIdentifier = _d[0],\n            instanceDeferred = _d[1];\n\n        var normalizedIdentifier = this.normalizeInstanceIdentifier(instanceIdentifier);\n\n        try {\n          // `getOrInitializeService()` should always return a valid instance since a component is guaranteed. use ! to make typescript happy.\n          var instance = this.getOrInitializeService({\n            instanceIdentifier: normalizedIdentifier\n          });\n          instanceDeferred.resolve(instance);\n        } catch (e) {// when the instance factory throws an exception, it should not cause\n          // a fatal error. We just leave the promise unresolved.\n        }\n      }\n    } catch (e_1_1) {\n      e_1 = {\n        error: e_1_1\n      };\n    } finally {\n      try {\n        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n      } finally {\n        if (e_1) throw e_1.error;\n      }\n    }\n  };\n\n  Provider.prototype.clearInstance = function (identifier) {\n    if (identifier === void 0) {\n      identifier = DEFAULT_ENTRY_NAME$1;\n    }\n\n    this.instancesDeferred.delete(identifier);\n    this.instancesOptions.delete(identifier);\n    this.instances.delete(identifier);\n  }; // app.delete() will call this method on every provider to delete the services\n  // TODO: should we mark the provider as deleted?\n\n\n  Provider.prototype.delete = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var services;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            services = Array.from(this.instances.values());\n            return [4\n            /*yield*/\n            , Promise.all(__spreadArray(__spreadArray([], __read(services.filter(function (service) {\n              return 'INTERNAL' in service;\n            }) // legacy services\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            .map(function (service) {\n              return service.INTERNAL.delete();\n            }))), __read(services.filter(function (service) {\n              return '_delete' in service;\n            }) // modularized services\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            .map(function (service) {\n              return service._delete();\n            }))))];\n\n          case 1:\n            _a.sent();\n\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  Provider.prototype.isComponentSet = function () {\n    return this.component != null;\n  };\n\n  Provider.prototype.isInitialized = function (identifier) {\n    if (identifier === void 0) {\n      identifier = DEFAULT_ENTRY_NAME$1;\n    }\n\n    return this.instances.has(identifier);\n  };\n\n  Provider.prototype.getOptions = function (identifier) {\n    if (identifier === void 0) {\n      identifier = DEFAULT_ENTRY_NAME$1;\n    }\n\n    return this.instancesOptions.get(identifier) || {};\n  };\n\n  Provider.prototype.initialize = function (opts) {\n    var e_2, _a;\n\n    if (opts === void 0) {\n      opts = {};\n    }\n\n    var _b = opts.options,\n        options = _b === void 0 ? {} : _b;\n    var normalizedIdentifier = this.normalizeInstanceIdentifier(opts.instanceIdentifier);\n\n    if (this.isInitialized(normalizedIdentifier)) {\n      throw Error(this.name + \"(\" + normalizedIdentifier + \") has already been initialized\");\n    }\n\n    if (!this.isComponentSet()) {\n      throw Error(\"Component \" + this.name + \" has not been registered yet\");\n    }\n\n    var instance = this.getOrInitializeService({\n      instanceIdentifier: normalizedIdentifier,\n      options: options\n    });\n\n    try {\n      // resolve any pending promise waiting for the service instance\n      for (var _c = __values(this.instancesDeferred.entries()), _d = _c.next(); !_d.done; _d = _c.next()) {\n        var _e = __read(_d.value, 2),\n            instanceIdentifier = _e[0],\n            instanceDeferred = _e[1];\n\n        var normalizedDeferredIdentifier = this.normalizeInstanceIdentifier(instanceIdentifier);\n\n        if (normalizedIdentifier === normalizedDeferredIdentifier) {\n          instanceDeferred.resolve(instance);\n        }\n      }\n    } catch (e_2_1) {\n      e_2 = {\n        error: e_2_1\n      };\n    } finally {\n      try {\n        if (_d && !_d.done && (_a = _c.return)) _a.call(_c);\n      } finally {\n        if (e_2) throw e_2.error;\n      }\n    }\n\n    return instance;\n  };\n  /**\r\n   *\r\n   * @param callback - a function that will be invoked  after the provider has been initialized by calling provider.initialize().\r\n   * The function is invoked SYNCHRONOUSLY, so it should not execute any longrunning tasks in order to not block the program.\r\n   *\r\n   * @param identifier An optional instance identifier\r\n   * @returns a function to unregister the callback\r\n   */\n\n\n  Provider.prototype.onInit = function (callback, identifier) {\n    var _a;\n\n    var normalizedIdentifier = this.normalizeInstanceIdentifier(identifier);\n    var existingCallbacks = (_a = this.onInitCallbacks.get(normalizedIdentifier)) !== null && _a !== void 0 ? _a : new Set();\n    existingCallbacks.add(callback);\n    this.onInitCallbacks.set(normalizedIdentifier, existingCallbacks);\n    var existingInstance = this.instances.get(normalizedIdentifier);\n\n    if (existingInstance) {\n      callback(existingInstance, normalizedIdentifier);\n    }\n\n    return function () {\n      existingCallbacks.delete(callback);\n    };\n  };\n  /**\r\n   * Invoke onInit callbacks synchronously\r\n   * @param instance the service instance`\r\n   */\n\n\n  Provider.prototype.invokeOnInitCallbacks = function (instance, identifier) {\n    var e_3, _a;\n\n    var callbacks = this.onInitCallbacks.get(identifier);\n\n    if (!callbacks) {\n      return;\n    }\n\n    try {\n      for (var callbacks_1 = __values(callbacks), callbacks_1_1 = callbacks_1.next(); !callbacks_1_1.done; callbacks_1_1 = callbacks_1.next()) {\n        var callback = callbacks_1_1.value;\n\n        try {\n          callback(instance, identifier);\n        } catch (_b) {// ignore errors in the onInit callback\n        }\n      }\n    } catch (e_3_1) {\n      e_3 = {\n        error: e_3_1\n      };\n    } finally {\n      try {\n        if (callbacks_1_1 && !callbacks_1_1.done && (_a = callbacks_1.return)) _a.call(callbacks_1);\n      } finally {\n        if (e_3) throw e_3.error;\n      }\n    }\n  };\n\n  Provider.prototype.getOrInitializeService = function (_a) {\n    var instanceIdentifier = _a.instanceIdentifier,\n        _b = _a.options,\n        options = _b === void 0 ? {} : _b;\n    var instance = this.instances.get(instanceIdentifier);\n\n    if (!instance && this.component) {\n      instance = this.component.instanceFactory(this.container, {\n        instanceIdentifier: normalizeIdentifierForFactory(instanceIdentifier),\n        options: options\n      });\n      this.instances.set(instanceIdentifier, instance);\n      this.instancesOptions.set(instanceIdentifier, options);\n      /**\r\n       * Invoke onInit listeners.\r\n       * Note this.component.onInstanceCreated is different, which is used by the component creator,\r\n       * while onInit listeners are registered by consumers of the provider.\r\n       */\n\n      this.invokeOnInitCallbacks(instance, instanceIdentifier);\n      /**\r\n       * Order is important\r\n       * onInstanceCreated() should be called after this.instances.set(instanceIdentifier, instance); which\r\n       * makes `isInitialized()` return true.\r\n       */\n\n      if (this.component.onInstanceCreated) {\n        try {\n          this.component.onInstanceCreated(this.container, instanceIdentifier, instance);\n        } catch (_c) {// ignore errors in the onInstanceCreatedCallback\n        }\n      }\n    }\n\n    return instance || null;\n  };\n\n  Provider.prototype.normalizeInstanceIdentifier = function (identifier) {\n    if (identifier === void 0) {\n      identifier = DEFAULT_ENTRY_NAME$1;\n    }\n\n    if (this.component) {\n      return this.component.multipleInstances ? identifier : DEFAULT_ENTRY_NAME$1;\n    } else {\n      return identifier; // assume multiple instances are supported before the component is provided.\n    }\n  };\n\n  Provider.prototype.shouldAutoInitialize = function () {\n    return !!this.component && this.component.instantiationMode !== \"EXPLICIT\"\n    /* EXPLICIT */\n    ;\n  };\n\n  return Provider;\n}(); // undefined should be passed to the service factory for the default instance\n\n\nfunction normalizeIdentifierForFactory(identifier) {\n  return identifier === DEFAULT_ENTRY_NAME$1 ? undefined : identifier;\n}\n\nfunction isComponentEager(component) {\n  return component.instantiationMode === \"EAGER\"\n  /* EAGER */\n  ;\n}\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * ComponentContainer that provides Providers for service name T, e.g. `auth`, `auth-internal`\r\n */\n\n\nvar ComponentContainer = function () {\n  function ComponentContainer(name) {\n    this.name = name;\n    this.providers = new Map();\n  }\n  /**\r\n   *\r\n   * @param component Component being added\r\n   * @param overwrite When a component with the same name has already been registered,\r\n   * if overwrite is true: overwrite the existing component with the new component and create a new\r\n   * provider with the new component. It can be useful in tests where you want to use different mocks\r\n   * for different tests.\r\n   * if overwrite is false: throw an exception\r\n   */\n\n\n  ComponentContainer.prototype.addComponent = function (component) {\n    var provider = this.getProvider(component.name);\n\n    if (provider.isComponentSet()) {\n      throw new Error(\"Component \" + component.name + \" has already been registered with \" + this.name);\n    }\n\n    provider.setComponent(component);\n  };\n\n  ComponentContainer.prototype.addOrOverwriteComponent = function (component) {\n    var provider = this.getProvider(component.name);\n\n    if (provider.isComponentSet()) {\n      // delete the existing provider from the container, so we can register the new component\n      this.providers.delete(component.name);\n    }\n\n    this.addComponent(component);\n  };\n  /**\r\n   * getProvider provides a type safe interface where it can only be called with a field name\r\n   * present in NameServiceMapping interface.\r\n   *\r\n   * Firebase SDKs providing services should extend NameServiceMapping interface to register\r\n   * themselves.\r\n   */\n\n\n  ComponentContainer.prototype.getProvider = function (name) {\n    if (this.providers.has(name)) {\n      return this.providers.get(name);\n    } // create a Provider for a service that hasn't registered with Firebase\n\n\n    var provider = new Provider(name, this);\n    this.providers.set(name, provider);\n    return provider;\n  };\n\n  ComponentContainer.prototype.getProviders = function () {\n    return Array.from(this.providers.values());\n  };\n\n  return ComponentContainer;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar _a;\n/**\r\n * A container for all of the Logger instances\r\n */\n\n\nvar instances = [];\n/**\r\n * The JS SDK supports 5 log levels and also allows a user the ability to\r\n * silence the logs altogether.\r\n *\r\n * The order is a follows:\r\n * DEBUG < VERBOSE < INFO < WARN < ERROR\r\n *\r\n * All of the log types above the current log level will be captured (i.e. if\r\n * you set the log level to `INFO`, errors will still be logged, but `DEBUG` and\r\n * `VERBOSE` logs will not)\r\n */\n\nvar LogLevel;\n\n(function (LogLevel) {\n  LogLevel[LogLevel[\"DEBUG\"] = 0] = \"DEBUG\";\n  LogLevel[LogLevel[\"VERBOSE\"] = 1] = \"VERBOSE\";\n  LogLevel[LogLevel[\"INFO\"] = 2] = \"INFO\";\n  LogLevel[LogLevel[\"WARN\"] = 3] = \"WARN\";\n  LogLevel[LogLevel[\"ERROR\"] = 4] = \"ERROR\";\n  LogLevel[LogLevel[\"SILENT\"] = 5] = \"SILENT\";\n})(LogLevel || (LogLevel = {}));\n\nvar levelStringToEnum = {\n  'debug': LogLevel.DEBUG,\n  'verbose': LogLevel.VERBOSE,\n  'info': LogLevel.INFO,\n  'warn': LogLevel.WARN,\n  'error': LogLevel.ERROR,\n  'silent': LogLevel.SILENT\n};\n/**\r\n * The default log level\r\n */\n\nvar defaultLogLevel = LogLevel.INFO;\n/**\r\n * By default, `console.debug` is not displayed in the developer console (in\r\n * chrome). To avoid forcing users to have to opt-in to these logs twice\r\n * (i.e. once for firebase, and once in the console), we are sending `DEBUG`\r\n * logs to the `console.log` function.\r\n */\n\nvar ConsoleMethod = (_a = {}, _a[LogLevel.DEBUG] = 'log', _a[LogLevel.VERBOSE] = 'log', _a[LogLevel.INFO] = 'info', _a[LogLevel.WARN] = 'warn', _a[LogLevel.ERROR] = 'error', _a);\n/**\r\n * The default log handler will forward DEBUG, VERBOSE, INFO, WARN, and ERROR\r\n * messages on to their corresponding console counterparts (if the log method\r\n * is supported by the current log level)\r\n */\n\nvar defaultLogHandler = function (instance, logType) {\n  var args = [];\n\n  for (var _i = 2; _i < arguments.length; _i++) {\n    args[_i - 2] = arguments[_i];\n  }\n\n  if (logType < instance.logLevel) {\n    return;\n  }\n\n  var now = new Date().toISOString();\n  var method = ConsoleMethod[logType];\n\n  if (method) {\n    console[method].apply(console, __spreadArray([\"[\" + now + \"]  \" + instance.name + \":\"], args));\n  } else {\n    throw new Error(\"Attempted to log a message with an invalid logType (value: \" + logType + \")\");\n  }\n};\n\nvar Logger = function () {\n  /**\r\n   * Gives you an instance of a Logger to capture messages according to\r\n   * Firebase's logging scheme.\r\n   *\r\n   * @param name The name that the logs will be associated with\r\n   */\n  function Logger(name) {\n    this.name = name;\n    /**\r\n     * The log level of the given Logger instance.\r\n     */\n\n    this._logLevel = defaultLogLevel;\n    /**\r\n     * The main (internal) log handler for the Logger instance.\r\n     * Can be set to a new function in internal package code but not by user.\r\n     */\n\n    this._logHandler = defaultLogHandler;\n    /**\r\n     * The optional, additional, user-defined log handler for the Logger instance.\r\n     */\n\n    this._userLogHandler = null;\n    /**\r\n     * Capture the current instance for later use\r\n     */\n\n    instances.push(this);\n  }\n\n  Object.defineProperty(Logger.prototype, \"logLevel\", {\n    get: function () {\n      return this._logLevel;\n    },\n    set: function (val) {\n      if (!(val in LogLevel)) {\n        throw new TypeError(\"Invalid value \\\"\" + val + \"\\\" assigned to `logLevel`\");\n      }\n\n      this._logLevel = val;\n    },\n    enumerable: false,\n    configurable: true\n  }); // Workaround for setter/getter having to be the same type.\n\n  Logger.prototype.setLogLevel = function (val) {\n    this._logLevel = typeof val === 'string' ? levelStringToEnum[val] : val;\n  };\n\n  Object.defineProperty(Logger.prototype, \"logHandler\", {\n    get: function () {\n      return this._logHandler;\n    },\n    set: function (val) {\n      if (typeof val !== 'function') {\n        throw new TypeError('Value assigned to `logHandler` must be a function');\n      }\n\n      this._logHandler = val;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Logger.prototype, \"userLogHandler\", {\n    get: function () {\n      return this._userLogHandler;\n    },\n    set: function (val) {\n      this._userLogHandler = val;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  /**\r\n   * The functions below are all based on the `console` interface\r\n   */\n\n  Logger.prototype.debug = function () {\n    var args = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      args[_i] = arguments[_i];\n    }\n\n    this._userLogHandler && this._userLogHandler.apply(this, __spreadArray([this, LogLevel.DEBUG], args));\n\n    this._logHandler.apply(this, __spreadArray([this, LogLevel.DEBUG], args));\n  };\n\n  Logger.prototype.log = function () {\n    var args = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      args[_i] = arguments[_i];\n    }\n\n    this._userLogHandler && this._userLogHandler.apply(this, __spreadArray([this, LogLevel.VERBOSE], args));\n\n    this._logHandler.apply(this, __spreadArray([this, LogLevel.VERBOSE], args));\n  };\n\n  Logger.prototype.info = function () {\n    var args = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      args[_i] = arguments[_i];\n    }\n\n    this._userLogHandler && this._userLogHandler.apply(this, __spreadArray([this, LogLevel.INFO], args));\n\n    this._logHandler.apply(this, __spreadArray([this, LogLevel.INFO], args));\n  };\n\n  Logger.prototype.warn = function () {\n    var args = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      args[_i] = arguments[_i];\n    }\n\n    this._userLogHandler && this._userLogHandler.apply(this, __spreadArray([this, LogLevel.WARN], args));\n\n    this._logHandler.apply(this, __spreadArray([this, LogLevel.WARN], args));\n  };\n\n  Logger.prototype.error = function () {\n    var args = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      args[_i] = arguments[_i];\n    }\n\n    this._userLogHandler && this._userLogHandler.apply(this, __spreadArray([this, LogLevel.ERROR], args));\n\n    this._logHandler.apply(this, __spreadArray([this, LogLevel.ERROR], args));\n  };\n\n  return Logger;\n}();\n\nfunction setLogLevel$1(level) {\n  instances.forEach(function (inst) {\n    inst.setLogLevel(level);\n  });\n}\n\nfunction setUserLogHandler(logCallback, options) {\n  var _loop_1 = function (instance) {\n    var customLogLevel = null;\n\n    if (options && options.level) {\n      customLogLevel = levelStringToEnum[options.level];\n    }\n\n    if (logCallback === null) {\n      instance.userLogHandler = null;\n    } else {\n      instance.userLogHandler = function (instance, level) {\n        var args = [];\n\n        for (var _i = 2; _i < arguments.length; _i++) {\n          args[_i - 2] = arguments[_i];\n        }\n\n        var message = args.map(function (arg) {\n          if (arg == null) {\n            return null;\n          } else if (typeof arg === 'string') {\n            return arg;\n          } else if (typeof arg === 'number' || typeof arg === 'boolean') {\n            return arg.toString();\n          } else if (arg instanceof Error) {\n            return arg.message;\n          } else {\n            try {\n              return JSON.stringify(arg);\n            } catch (ignored) {\n              return null;\n            }\n          }\n        }).filter(function (arg) {\n          return arg;\n        }).join(' ');\n\n        if (level >= (customLogLevel !== null && customLogLevel !== void 0 ? customLogLevel : instance.logLevel)) {\n          logCallback({\n            level: LogLevel[level].toLowerCase(),\n            message: message,\n            args: args,\n            type: instance.name\n          });\n        }\n      };\n    }\n  };\n\n  for (var _i = 0, instances_1 = instances; _i < instances_1.length; _i++) {\n    var instance = instances_1[_i];\n\n    _loop_1(instance);\n  }\n}\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nclass PlatformLoggerServiceImpl {\n  constructor(container) {\n    this.container = container;\n  } // In initial implementation, this will be called by installations on\n  // auth token refresh, and installations will send this string.\n\n\n  getPlatformInfoString() {\n    const providers = this.container.getProviders(); // Loop through providers and get library/version pairs from any that are\n    // version components.\n\n    return providers.map(provider => {\n      if (isVersionServiceProvider(provider)) {\n        const service = provider.getImmediate();\n        return `${service.library}/${service.version}`;\n      } else {\n        return null;\n      }\n    }).filter(logString => logString).join(' ');\n  }\n\n}\n/**\r\n *\r\n * @param provider check if this provider provides a VersionService\r\n *\r\n * NOTE: Using Provider<'app-version'> is a hack to indicate that the provider\r\n * provides VersionService. The provider is not necessarily a 'app-version'\r\n * provider.\r\n */\n\n\nfunction isVersionServiceProvider(provider) {\n  const component = provider.getComponent();\n  return (component === null || component === void 0 ? void 0 : component.type) === \"VERSION\"\n  /* VERSION */\n  ;\n}\n\nconst name$o = \"https://www.gstatic.com/firebasejs/9.0.0/firebase-app.js\";\nconst version$1 = \"0.7.0\";\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nconst logger = new Logger('https://www.gstatic.com/firebasejs/9.0.0/firebase-app.js');\nconst name$n = \"https://www.gstatic.com/firebasejs/9.0.0/firebase-app.js-compat\";\nconst name$m = \"@firebase/analytics-compat\";\nconst name$l = \"@firebase/analytics\";\nconst name$k = \"https://www.gstatic.com/firebasejs/9.0.0/firebase-app.js-check-compat\";\nconst name$j = \"https://www.gstatic.com/firebasejs/9.0.0/firebase-app.js-check\";\nconst name$i = \"@firebase/auth\";\nconst name$h = \"@firebase/auth-compat\";\nconst name$g = \"@firebase/database\";\nconst name$f = \"@firebase/database-compat\";\nconst name$e = \"@firebase/functions\";\nconst name$d = \"@firebase/functions-compat\";\nconst name$c = \"@firebase/installations\";\nconst name$b = \"@firebase/installations-compat\";\nconst name$a = \"@firebase/messaging\";\nconst name$9 = \"@firebase/messaging-compat\";\nconst name$8 = \"@firebase/performance\";\nconst name$7 = \"@firebase/performance-compat\";\nconst name$6 = \"@firebase/remote-config\";\nconst name$5 = \"@firebase/remote-config-compat\";\nconst name$4 = \"@firebase/storage\";\nconst name$3 = \"@firebase/storage-compat\";\nconst name$2 = \"@firebase/firestore\";\nconst name$1 = \"@firebase/firestore-compat\";\nconst name$p = \"firebase\";\nconst version$2 = \"9.0.0\";\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * The default app name\r\n *\r\n * @internal\r\n */\n\nconst DEFAULT_ENTRY_NAME = '[DEFAULT]';\nconst PLATFORM_LOG_STRING = {\n  [name$o]: 'fire-core',\n  [name$n]: 'fire-core-compat',\n  [name$l]: 'fire-analytics',\n  [name$m]: 'fire-analytics-compat',\n  [name$j]: 'fire-app-check',\n  [name$k]: 'fire-app-check-compat',\n  [name$i]: 'fire-auth',\n  [name$h]: 'fire-auth-compat',\n  [name$g]: 'fire-rtdb',\n  [name$f]: 'fire-rtdb-compat',\n  [name$e]: 'fire-fn',\n  [name$d]: 'fire-fn-compat',\n  [name$c]: 'fire-iid',\n  [name$b]: 'fire-iid-compat',\n  [name$a]: 'fire-fcm',\n  [name$9]: 'fire-fcm-compat',\n  [name$8]: 'fire-perf',\n  [name$7]: 'fire-perf-compat',\n  [name$6]: 'fire-rc',\n  [name$5]: 'fire-rc-compat',\n  [name$4]: 'fire-gcs',\n  [name$3]: 'fire-gcs-compat',\n  [name$2]: 'fire-fst',\n  [name$1]: 'fire-fst-compat',\n  'fire-js': 'fire-js',\n  [name$p]: 'fire-js-all'\n};\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * @internal\r\n */\n\nconst _apps = new Map();\n/**\r\n * Registered components.\r\n *\r\n * @internal\r\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n\nconst _components = new Map();\n/**\r\n * @param component - the component being added to this app's container\r\n *\r\n * @internal\r\n */\n\n\nfunction _addComponent(app, component) {\n  try {\n    app.container.addComponent(component);\n  } catch (e) {\n    logger.debug(`Component ${component.name} failed to register with FirebaseApp ${app.name}`, e);\n  }\n}\n/**\r\n *\r\n * @internal\r\n */\n\n\nfunction _addOrOverwriteComponent(app, component) {\n  app.container.addOrOverwriteComponent(component);\n}\n/**\r\n *\r\n * @param component - the component to register\r\n * @returns whether or not the component is registered successfully\r\n *\r\n * @internal\r\n */\n\n\nfunction _registerComponent(component) {\n  const componentName = component.name;\n\n  if (_components.has(componentName)) {\n    logger.debug(`There were multiple attempts to register component ${componentName}.`);\n    return false;\n  }\n\n  _components.set(componentName, component); // add the component to existing app instances\n\n\n  for (const app of _apps.values()) {\n    _addComponent(app, component);\n  }\n\n  return true;\n}\n/**\r\n *\r\n * @param app - FirebaseApp instance\r\n * @param name - service name\r\n *\r\n * @returns the provider for the service with the matching name\r\n *\r\n * @internal\r\n */\n\n\nfunction _getProvider(app, name) {\n  return app.container.getProvider(name);\n}\n/**\r\n *\r\n * @param app - FirebaseApp instance\r\n * @param name - service name\r\n * @param instanceIdentifier - service instance identifier in case the service supports multiple instances\r\n *\r\n * @internal\r\n */\n\n\nfunction _removeServiceInstance(app, name, instanceIdentifier = DEFAULT_ENTRY_NAME) {\n  _getProvider(app, name).clearInstance(instanceIdentifier);\n}\n/**\r\n * Test only\r\n *\r\n * @internal\r\n */\n\n\nfunction _clearComponents() {\n  _components.clear();\n}\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nconst ERRORS = {\n  [\"no-app\"\n  /* NO_APP */\n  ]: \"No Firebase App '{$appName}' has been created - \" + 'call Firebase App.initializeApp()',\n  [\"bad-app-name\"\n  /* BAD_APP_NAME */\n  ]: \"Illegal App name: '{$appName}\",\n  [\"duplicate-app\"\n  /* DUPLICATE_APP */\n  ]: \"Firebase App named '{$appName}' already exists with different options or config\",\n  [\"app-deleted\"\n  /* APP_DELETED */\n  ]: \"Firebase App named '{$appName}' already deleted\",\n  [\"invalid-app-argument\"\n  /* INVALID_APP_ARGUMENT */\n  ]: 'firebase.{$appName}() takes either no argument or a ' + 'Firebase App instance.',\n  [\"invalid-log-argument\"\n  /* INVALID_LOG_ARGUMENT */\n  ]: 'First argument to `onLog` must be null or a function.'\n};\nconst ERROR_FACTORY = new ErrorFactory('app', 'Firebase', ERRORS);\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nclass FirebaseAppImpl {\n  constructor(options, config, container) {\n    this._isDeleted = false;\n    this._options = Object.assign({}, options);\n    this._config = Object.assign({}, config);\n    this._name = config.name;\n    this._automaticDataCollectionEnabled = config.automaticDataCollectionEnabled;\n    this._container = container;\n    this.container.addComponent(new Component('app', () => this, \"PUBLIC\"\n    /* PUBLIC */\n    ));\n  }\n\n  get automaticDataCollectionEnabled() {\n    this.checkDestroyed();\n    return this._automaticDataCollectionEnabled;\n  }\n\n  set automaticDataCollectionEnabled(val) {\n    this.checkDestroyed();\n    this._automaticDataCollectionEnabled = val;\n  }\n\n  get name() {\n    this.checkDestroyed();\n    return this._name;\n  }\n\n  get options() {\n    this.checkDestroyed();\n    return this._options;\n  }\n\n  get config() {\n    this.checkDestroyed();\n    return this._config;\n  }\n\n  get container() {\n    return this._container;\n  }\n\n  get isDeleted() {\n    return this._isDeleted;\n  }\n\n  set isDeleted(val) {\n    this._isDeleted = val;\n  }\n  /**\r\n   * This function will throw an Error if the App has already been deleted -\r\n   * use before performing API actions on the App.\r\n   */\n\n\n  checkDestroyed() {\n    if (this.isDeleted) {\n      throw ERROR_FACTORY.create(\"app-deleted\"\n      /* APP_DELETED */\n      , {\n        appName: this._name\n      });\n    }\n  }\n\n}\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * The current SDK version.\r\n *\r\n * @public\r\n */\n\n\nconst SDK_VERSION = version$2;\n\nfunction initializeApp(options, rawConfig = {}) {\n  if (typeof rawConfig !== 'object') {\n    const name = rawConfig;\n    rawConfig = {\n      name\n    };\n  }\n\n  const config = Object.assign({\n    name: DEFAULT_ENTRY_NAME,\n    automaticDataCollectionEnabled: false\n  }, rawConfig);\n  const name = config.name;\n\n  if (typeof name !== 'string' || !name) {\n    throw ERROR_FACTORY.create(\"bad-app-name\"\n    /* BAD_APP_NAME */\n    , {\n      appName: String(name)\n    });\n  }\n\n  const existingApp = _apps.get(name);\n\n  if (existingApp) {\n    // return the existing app if options and config deep equal the ones in the existing app.\n    if (deepEqual(options, existingApp.options) && deepEqual(config, existingApp.config)) {\n      return existingApp;\n    } else {\n      throw ERROR_FACTORY.create(\"duplicate-app\"\n      /* DUPLICATE_APP */\n      , {\n        appName: name\n      });\n    }\n  }\n\n  const container = new ComponentContainer(name);\n\n  for (const component of _components.values()) {\n    container.addComponent(component);\n  }\n\n  const newApp = new FirebaseAppImpl(options, config, container);\n\n  _apps.set(name, newApp);\n\n  return newApp;\n}\n/**\r\n * Retrieves a {@link https://www.gstatic.com/firebasejs/9.0.0/firebase-app.js#FirebaseApp} instance.\r\n *\r\n * When called with no arguments, the default app is returned. When an app name\r\n * is provided, the app corresponding to that name is returned.\r\n *\r\n * An exception is thrown if the app being retrieved has not yet been\r\n * initialized.\r\n *\r\n * @example\r\n * ```javascript\r\n * // Return the default app\r\n * const app = getApp();\r\n * ```\r\n *\r\n * @example\r\n * ```javascript\r\n * // Return a named app\r\n * const otherApp = getApp(\"otherApp\");\r\n * ```\r\n *\r\n * @param name - Optional name of the app to return. If no name is\r\n *   provided, the default is `\"[DEFAULT]\"`.\r\n *\r\n * @returns The app corresponding to the provided app name.\r\n *   If no app name is provided, the default app is returned.\r\n *\r\n * @public\r\n */\n\n\nfunction getApp(name = DEFAULT_ENTRY_NAME) {\n  const app = _apps.get(name);\n\n  if (!app) {\n    throw ERROR_FACTORY.create(\"no-app\"\n    /* NO_APP */\n    , {\n      appName: name\n    });\n  }\n\n  return app;\n}\n/**\r\n * A (read-only) array of all initialized apps.\r\n * @public\r\n */\n\n\nfunction getApps() {\n  return Array.from(_apps.values());\n}\n/**\r\n * Renders this app unusable and frees the resources of all associated\r\n * services.\r\n *\r\n * @example\r\n * ```javascript\r\n * deleteApp(app)\r\n *   .then(function() {\r\n *     console.log(\"App deleted successfully\");\r\n *   })\r\n *   .catch(function(error) {\r\n *     console.log(\"Error deleting app:\", error);\r\n *   });\r\n * ```\r\n *\r\n * @public\r\n */\n\n\nasync function deleteApp(app) {\n  const name = app.name;\n\n  if (_apps.has(name)) {\n    _apps.delete(name);\n\n    await Promise.all(app.container.getProviders().map(provider => provider.delete()));\n    app.isDeleted = true;\n  }\n}\n/**\r\n * Registers a library's name and version for platform logging purposes.\r\n * @param library - Name of 1p or 3p library (e.g. firestore, angularfire)\r\n * @param version - Current version of that library.\r\n * @param variant - Bundle variant, e.g., node, rn, etc.\r\n *\r\n * @public\r\n */\n\n\nfunction registerVersion(libraryKeyOrName, version, variant) {\n  var _a; // TODO: We can use this check to whitelist strings when/if we set up\n  // a good whitelist system.\n\n\n  let library = (_a = PLATFORM_LOG_STRING[libraryKeyOrName]) !== null && _a !== void 0 ? _a : libraryKeyOrName;\n\n  if (variant) {\n    library += `-${variant}`;\n  }\n\n  const libraryMismatch = library.match(/\\s|\\//);\n  const versionMismatch = version.match(/\\s|\\//);\n\n  if (libraryMismatch || versionMismatch) {\n    const warning = [`Unable to register library \"${library}\" with version \"${version}\":`];\n\n    if (libraryMismatch) {\n      warning.push(`library name \"${library}\" contains illegal characters (whitespace or \"/\")`);\n    }\n\n    if (libraryMismatch && versionMismatch) {\n      warning.push('and');\n    }\n\n    if (versionMismatch) {\n      warning.push(`version name \"${version}\" contains illegal characters (whitespace or \"/\")`);\n    }\n\n    logger.warn(warning.join(' '));\n    return;\n  }\n\n  _registerComponent(new Component(`${library}-version`, () => ({\n    library,\n    version\n  }), \"VERSION\"\n  /* VERSION */\n  ));\n}\n/**\r\n * Sets log handler for all Firebase SDKs.\r\n * @param logCallback - An optional custom log handler that executes user code whenever\r\n * the Firebase SDK makes a logging call.\r\n *\r\n * @public\r\n */\n\n\nfunction onLog(logCallback, options) {\n  if (logCallback !== null && typeof logCallback !== 'function') {\n    throw ERROR_FACTORY.create(\"invalid-log-argument\"\n    /* INVALID_LOG_ARGUMENT */\n    );\n  }\n\n  setUserLogHandler(logCallback, options);\n}\n/**\r\n * Sets log level for all Firebase SDKs.\r\n *\r\n * All of the log types above the current log level are captured (i.e. if\r\n * you set the log level to `info`, errors are logged, but `debug` and\r\n * `verbose` logs are not).\r\n *\r\n * @public\r\n */\n\n\nfunction setLogLevel(logLevel) {\n  setLogLevel$1(logLevel);\n}\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nfunction registerCoreComponents(variant) {\n  _registerComponent(new Component('platform-logger', container => new PlatformLoggerServiceImpl(container), \"PRIVATE\"\n  /* PRIVATE */\n  )); // Register `app` package.\n\n\n  registerVersion(name$o, version$1, variant); // Register platform SDK identifier (no version).\n\n  registerVersion('fire-js', '');\n}\n/**\r\n * Firebase App\r\n *\r\n * @remarks This package coordinates the communication between the different Firebase components\r\n * @packageDocumentation\r\n */\n\n\nregisterCoreComponents();\nvar name = \"firebase\";\nvar version = \"9.0.0\";\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nregisterVersion(name, version, 'cdn');\nexport { FirebaseError, SDK_VERSION, DEFAULT_ENTRY_NAME as _DEFAULT_ENTRY_NAME, _addComponent, _addOrOverwriteComponent, _apps, _clearComponents, _components, _getProvider, _registerComponent, _removeServiceInstance, deleteApp, getApp, getApps, initializeApp, onLog, registerVersion, setLogLevel };","map":{"version":3,"sources":["../../node_modules/tslib/tslib.es6.js","../util/src/deferred.ts","../util/src/errors.ts","../util/src/obj.ts","../component/src/component.ts","../component/src/constants.ts","../component/src/provider.ts","../component/src/component_container.ts","../logger/src/logger.ts","../app/src/platformLoggerService.ts","../app/src/logger.ts","../app/src/constants.ts","../app/src/internal.ts","../app/src/errors.ts","../app/src/firebaseApp.ts","../app/src/api.ts","../app/src/registerCoreComponents.ts","../app/src/index.ts","app/index.cdn.ts"],"names":["DEFAULT_ENTRY_NAME","setLogLevel","appName","appCompatName","analyticsName","analyticsCompatName","appCheckName","appCheckCompatName","authName","authCompatName","databaseName","databaseCompatName","functionsName","functionsCompatName","installationsName","installationsCompatName","messagingName","messagingCompatName","performanceName","performanceCompatName","remoteConfigName","remoteConfigCompatName","storageName","storageCompatName","firestoreName","firestoreCompatName","packageName","version","setLogLevelImpl","name"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from) {\r\n    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)\r\n        to[j] = from[i];\r\n    return to;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport class Deferred<R> {\n  promise: Promise<R>;\n  reject: (value?: unknown) => void = () => {};\n  resolve: (value?: unknown) => void = () => {};\n  constructor() {\n    this.promise = new Promise((resolve, reject) => {\n      this.resolve = resolve as (value?: unknown) => void;\n      this.reject = reject as (value?: unknown) => void;\n    });\n  }\n\n  /**\n   * Our API internals are not promiseified and cannot because our callback APIs have subtle expectations around\n   * invoking promises inline, which Promises are forbidden to do. This method accepts an optional node-style callback\n   * and returns a node-style callback which will resolve or reject the Deferred's promise.\n   */\n  wrapCallback(\n    callback?: (error?: unknown, value?: unknown) => void\n  ): (error: unknown, value?: unknown) => void {\n    return (error, value?) => {\n      if (error) {\n        this.reject(error);\n      } else {\n        this.resolve(value);\n      }\n      if (typeof callback === 'function') {\n        // Attaching noop handler just in case developer wasn't expecting\n        // promises\n        this.promise.catch(() => {});\n\n        // Some of our callbacks don't expect a value and our own tests\n        // assert that the parameter length is 1\n        if (callback.length === 1) {\n          callback(error);\n        } else {\n          callback(error, value);\n        }\n      }\n    };\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * @fileoverview Standardized Firebase Error.\n *\n * Usage:\n *\n *   // Typescript string literals for type-safe codes\n *   type Err =\n *     'unknown' |\n *     'object-not-found'\n *     ;\n *\n *   // Closure enum for type-safe error codes\n *   // at-enum {string}\n *   var Err = {\n *     UNKNOWN: 'unknown',\n *     OBJECT_NOT_FOUND: 'object-not-found',\n *   }\n *\n *   let errors: Map<Err, string> = {\n *     'generic-error': \"Unknown error\",\n *     'file-not-found': \"Could not find file: {$file}\",\n *   };\n *\n *   // Type-safe function - must pass a valid error code as param.\n *   let error = new ErrorFactory<Err>('service', 'Service', errors);\n *\n *   ...\n *   throw error.create(Err.GENERIC);\n *   ...\n *   throw error.create(Err.FILE_NOT_FOUND, {'file': fileName});\n *   ...\n *   // Service: Could not file file: foo.txt (service/file-not-found).\n *\n *   catch (e) {\n *     assert(e.message === \"Could not find file: foo.txt.\");\n *     if (e.code === 'service/file-not-found') {\n *       console.log(\"Could not read file: \" + e['file']);\n *     }\n *   }\n */\n\nexport type ErrorMap<ErrorCode extends string> = {\n  readonly [K in ErrorCode]: string;\n};\n\nconst ERROR_NAME = 'FirebaseError';\n\nexport interface StringLike {\n  toString(): string;\n}\n\nexport interface ErrorData {\n  [key: string]: unknown;\n}\n\n// Based on code from:\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error#Custom_Error_Types\nexport class FirebaseError extends Error {\n  readonly name = ERROR_NAME;\n\n  constructor(\n    readonly code: string,\n    message: string,\n    public customData?: Record<string, unknown>\n  ) {\n    super(message);\n\n    // Fix For ES5\n    // https://github.com/Microsoft/TypeScript-wiki/blob/master/Breaking-Changes.md#extending-built-ins-like-error-array-and-map-may-no-longer-work\n    Object.setPrototypeOf(this, FirebaseError.prototype);\n\n    // Maintains proper stack trace for where our error was thrown.\n    // Only available on V8.\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, ErrorFactory.prototype.create);\n    }\n  }\n}\n\nexport class ErrorFactory<\n  ErrorCode extends string,\n  ErrorParams extends { readonly [K in ErrorCode]?: ErrorData } = {}\n> {\n  constructor(\n    private readonly service: string,\n    private readonly serviceName: string,\n    private readonly errors: ErrorMap<ErrorCode>\n  ) {}\n\n  create<K extends ErrorCode>(\n    code: K,\n    ...data: K extends keyof ErrorParams ? [ErrorParams[K]] : []\n  ): FirebaseError {\n    const customData = (data[0] as ErrorData) || {};\n    const fullCode = `${this.service}/${code}`;\n    const template = this.errors[code];\n\n    const message = template ? replaceTemplate(template, customData) : 'Error';\n    // Service Name: Error message (service/code).\n    const fullMessage = `${this.serviceName}: ${message} (${fullCode}).`;\n\n    const error = new FirebaseError(fullCode, fullMessage, customData);\n\n    return error;\n  }\n}\n\nfunction replaceTemplate(template: string, data: ErrorData): string {\n  return template.replace(PATTERN, (_, key) => {\n    const value = data[key];\n    return value != null ? String(value) : `<${key}?>`;\n  });\n}\n\nconst PATTERN = /\\{\\$([^}]+)}/g;\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport function contains<T extends object>(obj: T, key: string): boolean {\n  return Object.prototype.hasOwnProperty.call(obj, key);\n}\n\nexport function safeGet<T extends object, K extends keyof T>(\n  obj: T,\n  key: K\n): T[K] | undefined {\n  if (Object.prototype.hasOwnProperty.call(obj, key)) {\n    return obj[key];\n  } else {\n    return undefined;\n  }\n}\n\nexport function isEmpty(obj: object): obj is {} {\n  for (const key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      return false;\n    }\n  }\n  return true;\n}\n\nexport function map<K extends string, V, U>(\n  obj: { [key in K]: V },\n  fn: (value: V, key: K, obj: { [key in K]: V }) => U,\n  contextObj?: unknown\n): { [key in K]: U } {\n  const res: Partial<{ [key in K]: U }> = {};\n  for (const key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      res[key] = fn.call(contextObj, obj[key], key, obj);\n    }\n  }\n  return res as { [key in K]: U };\n}\n\n/**\n * Deep equal two objects. Support Arrays and Objects.\n */\nexport function deepEqual(a: object, b: object): boolean {\n  if (a === b) {\n    return true;\n  }\n\n  const aKeys = Object.keys(a);\n  const bKeys = Object.keys(b);\n  for (const k of aKeys) {\n    if (!bKeys.includes(k)) {\n      return false;\n    }\n\n    const aProp = (a as Record<string, unknown>)[k];\n    const bProp = (b as Record<string, unknown>)[k];\n    if (isObject(aProp) && isObject(bProp)) {\n      if (!deepEqual(aProp, bProp)) {\n        return false;\n      }\n    } else if (aProp !== bProp) {\n      return false;\n    }\n  }\n\n  for (const k of bKeys) {\n    if (!aKeys.includes(k)) {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction isObject(thing: unknown): thing is object {\n  return thing !== null && typeof thing === 'object';\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport {\n  InstantiationMode,\n  InstanceFactory,\n  ComponentType,\n  Dictionary,\n  Name,\n  onInstanceCreatedCallback\n} from './types';\n\n/**\n * Component for service name T, e.g. `auth`, `auth-internal`\n */\nexport class Component<T extends Name = Name> {\n  multipleInstances = false;\n  /**\n   * Properties to be added to the service namespace\n   */\n  serviceProps: Dictionary = {};\n\n  instantiationMode = InstantiationMode.LAZY;\n\n  onInstanceCreated: onInstanceCreatedCallback<T> | null = null;\n\n  /**\n   *\n   * @param name The public service name, e.g. app, auth, firestore, database\n   * @param instanceFactory Service factory responsible for creating the public interface\n   * @param type whether the service provided by the component is public or private\n   */\n  constructor(\n    readonly name: T,\n    readonly instanceFactory: InstanceFactory<T>,\n    readonly type: ComponentType\n  ) {}\n\n  setInstantiationMode(mode: InstantiationMode): this {\n    this.instantiationMode = mode;\n    return this;\n  }\n\n  setMultipleInstances(multipleInstances: boolean): this {\n    this.multipleInstances = multipleInstances;\n    return this;\n  }\n\n  setServiceProps(props: Dictionary): this {\n    this.serviceProps = props;\n    return this;\n  }\n\n  setInstanceCreatedCallback(callback: onInstanceCreatedCallback<T>): this {\n    this.onInstanceCreated = callback;\n    return this;\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport const DEFAULT_ENTRY_NAME = '[DEFAULT]';\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Deferred } from '@firebase/util';\nimport { ComponentContainer } from './component_container';\nimport { DEFAULT_ENTRY_NAME } from './constants';\nimport {\n  InitializeOptions,\n  InstantiationMode,\n  Name,\n  NameServiceMapping,\n  OnInitCallBack\n} from './types';\nimport { Component } from './component';\n\n/**\n * Provider for instance for service name T, e.g. 'auth', 'auth-internal'\n * NameServiceMapping[T] is an alias for the type of the instance\n */\nexport class Provider<T extends Name> {\n  private component: Component<T> | null = null;\n  private readonly instances: Map<string, NameServiceMapping[T]> = new Map();\n  private readonly instancesDeferred: Map<\n    string,\n    Deferred<NameServiceMapping[T]>\n  > = new Map();\n  private readonly instancesOptions: Map<string, Record<string, unknown>> =\n    new Map();\n  private onInitCallbacks: Map<string, Set<OnInitCallBack<T>>> = new Map();\n\n  constructor(\n    private readonly name: T,\n    private readonly container: ComponentContainer\n  ) {}\n\n  /**\n   * @param identifier A provider can provide mulitple instances of a service\n   * if this.component.multipleInstances is true.\n   */\n  get(identifier?: string): Promise<NameServiceMapping[T]> {\n    // if multipleInstances is not supported, use the default name\n    const normalizedIdentifier = this.normalizeInstanceIdentifier(identifier);\n\n    if (!this.instancesDeferred.has(normalizedIdentifier)) {\n      const deferred = new Deferred<NameServiceMapping[T]>();\n      this.instancesDeferred.set(normalizedIdentifier, deferred);\n\n      if (\n        this.isInitialized(normalizedIdentifier) ||\n        this.shouldAutoInitialize()\n      ) {\n        // initialize the service if it can be auto-initialized\n        try {\n          const instance = this.getOrInitializeService({\n            instanceIdentifier: normalizedIdentifier\n          });\n          if (instance) {\n            deferred.resolve(instance);\n          }\n        } catch (e) {\n          // when the instance factory throws an exception during get(), it should not cause\n          // a fatal error. We just return the unresolved promise in this case.\n        }\n      }\n    }\n\n    return this.instancesDeferred.get(normalizedIdentifier)!.promise;\n  }\n\n  /**\n   *\n   * @param options.identifier A provider can provide mulitple instances of a service\n   * if this.component.multipleInstances is true.\n   * @param options.optional If optional is false or not provided, the method throws an error when\n   * the service is not immediately available.\n   * If optional is true, the method returns null if the service is not immediately available.\n   */\n  getImmediate(options: {\n    identifier?: string;\n    optional: true;\n  }): NameServiceMapping[T] | null;\n  getImmediate(options?: {\n    identifier?: string;\n    optional?: false;\n  }): NameServiceMapping[T];\n  getImmediate(options?: {\n    identifier?: string;\n    optional?: boolean;\n  }): NameServiceMapping[T] | null {\n    // if multipleInstances is not supported, use the default name\n    const normalizedIdentifier = this.normalizeInstanceIdentifier(\n      options?.identifier\n    );\n    const optional = options?.optional ?? false;\n\n    if (\n      this.isInitialized(normalizedIdentifier) ||\n      this.shouldAutoInitialize()\n    ) {\n      try {\n        return this.getOrInitializeService({\n          instanceIdentifier: normalizedIdentifier\n        });\n      } catch (e) {\n        if (optional) {\n          return null;\n        } else {\n          throw e;\n        }\n      }\n    } else {\n      // In case a component is not initialized and should/can not be auto-initialized at the moment, return null if the optional flag is set, or throw\n      if (optional) {\n        return null;\n      } else {\n        throw Error(`Service ${this.name} is not available`);\n      }\n    }\n  }\n\n  getComponent(): Component<T> | null {\n    return this.component;\n  }\n\n  setComponent(component: Component<T>): void {\n    if (component.name !== this.name) {\n      throw Error(\n        `Mismatching Component ${component.name} for Provider ${this.name}.`\n      );\n    }\n\n    if (this.component) {\n      throw Error(`Component for ${this.name} has already been provided`);\n    }\n\n    this.component = component;\n\n    // return early without attempting to initialize the component if the component requires explicit initialization (calling `Provider.initialize()`)\n    if (!this.shouldAutoInitialize()) {\n      return;\n    }\n\n    // if the service is eager, initialize the default instance\n    if (isComponentEager(component)) {\n      try {\n        this.getOrInitializeService({ instanceIdentifier: DEFAULT_ENTRY_NAME });\n      } catch (e) {\n        // when the instance factory for an eager Component throws an exception during the eager\n        // initialization, it should not cause a fatal error.\n        // TODO: Investigate if we need to make it configurable, because some component may want to cause\n        // a fatal error in this case?\n      }\n    }\n\n    // Create service instances for the pending promises and resolve them\n    // NOTE: if this.multipleInstances is false, only the default instance will be created\n    // and all promises with resolve with it regardless of the identifier.\n    for (const [\n      instanceIdentifier,\n      instanceDeferred\n    ] of this.instancesDeferred.entries()) {\n      const normalizedIdentifier =\n        this.normalizeInstanceIdentifier(instanceIdentifier);\n\n      try {\n        // `getOrInitializeService()` should always return a valid instance since a component is guaranteed. use ! to make typescript happy.\n        const instance = this.getOrInitializeService({\n          instanceIdentifier: normalizedIdentifier\n        })!;\n        instanceDeferred.resolve(instance);\n      } catch (e) {\n        // when the instance factory throws an exception, it should not cause\n        // a fatal error. We just leave the promise unresolved.\n      }\n    }\n  }\n\n  clearInstance(identifier: string = DEFAULT_ENTRY_NAME): void {\n    this.instancesDeferred.delete(identifier);\n    this.instancesOptions.delete(identifier);\n    this.instances.delete(identifier);\n  }\n\n  // app.delete() will call this method on every provider to delete the services\n  // TODO: should we mark the provider as deleted?\n  async delete(): Promise<void> {\n    const services = Array.from(this.instances.values());\n\n    await Promise.all([\n      ...services\n        .filter(service => 'INTERNAL' in service) // legacy services\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        .map(service => (service as any).INTERNAL!.delete()),\n      ...services\n        .filter(service => '_delete' in service) // modularized services\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        .map(service => (service as any)._delete())\n    ]);\n  }\n\n  isComponentSet(): boolean {\n    return this.component != null;\n  }\n\n  isInitialized(identifier: string = DEFAULT_ENTRY_NAME): boolean {\n    return this.instances.has(identifier);\n  }\n\n  getOptions(identifier: string = DEFAULT_ENTRY_NAME): Record<string, unknown> {\n    return this.instancesOptions.get(identifier) || {};\n  }\n\n  initialize(opts: InitializeOptions = {}): NameServiceMapping[T] {\n    const { options = {} } = opts;\n    const normalizedIdentifier = this.normalizeInstanceIdentifier(\n      opts.instanceIdentifier\n    );\n    if (this.isInitialized(normalizedIdentifier)) {\n      throw Error(\n        `${this.name}(${normalizedIdentifier}) has already been initialized`\n      );\n    }\n\n    if (!this.isComponentSet()) {\n      throw Error(`Component ${this.name} has not been registered yet`);\n    }\n\n    const instance = this.getOrInitializeService({\n      instanceIdentifier: normalizedIdentifier,\n      options\n    })!;\n\n    // resolve any pending promise waiting for the service instance\n    for (const [\n      instanceIdentifier,\n      instanceDeferred\n    ] of this.instancesDeferred.entries()) {\n      const normalizedDeferredIdentifier =\n        this.normalizeInstanceIdentifier(instanceIdentifier);\n      if (normalizedIdentifier === normalizedDeferredIdentifier) {\n        instanceDeferred.resolve(instance);\n      }\n    }\n\n    return instance;\n  }\n\n  /**\n   *\n   * @param callback - a function that will be invoked  after the provider has been initialized by calling provider.initialize().\n   * The function is invoked SYNCHRONOUSLY, so it should not execute any longrunning tasks in order to not block the program.\n   *\n   * @param identifier An optional instance identifier\n   * @returns a function to unregister the callback\n   */\n  onInit(callback: OnInitCallBack<T>, identifier?: string): () => void {\n    const normalizedIdentifier = this.normalizeInstanceIdentifier(identifier);\n    const existingCallbacks =\n      this.onInitCallbacks.get(normalizedIdentifier) ??\n      new Set<OnInitCallBack<T>>();\n    existingCallbacks.add(callback);\n    this.onInitCallbacks.set(normalizedIdentifier, existingCallbacks);\n\n    const existingInstance = this.instances.get(normalizedIdentifier);\n    if (existingInstance) {\n      callback(existingInstance, normalizedIdentifier);\n    }\n\n    return () => {\n      existingCallbacks.delete(callback);\n    };\n  }\n\n  /**\n   * Invoke onInit callbacks synchronously\n   * @param instance the service instance`\n   */\n  private invokeOnInitCallbacks(\n    instance: NameServiceMapping[T],\n    identifier: string\n  ): void {\n    const callbacks = this.onInitCallbacks.get(identifier);\n    if (!callbacks) {\n      return;\n    }\n    for (const callback of callbacks) {\n      try {\n        callback(instance, identifier);\n      } catch {\n        // ignore errors in the onInit callback\n      }\n    }\n  }\n\n  private getOrInitializeService({\n    instanceIdentifier,\n    options = {}\n  }: {\n    instanceIdentifier: string;\n    options?: Record<string, unknown>;\n  }): NameServiceMapping[T] | null {\n    let instance = this.instances.get(instanceIdentifier);\n    if (!instance && this.component) {\n      instance = this.component.instanceFactory(this.container, {\n        instanceIdentifier: normalizeIdentifierForFactory(instanceIdentifier),\n        options\n      });\n      this.instances.set(instanceIdentifier, instance);\n      this.instancesOptions.set(instanceIdentifier, options);\n\n      /**\n       * Invoke onInit listeners.\n       * Note this.component.onInstanceCreated is different, which is used by the component creator,\n       * while onInit listeners are registered by consumers of the provider.\n       */\n      this.invokeOnInitCallbacks(instance, instanceIdentifier);\n\n      /**\n       * Order is important\n       * onInstanceCreated() should be called after this.instances.set(instanceIdentifier, instance); which\n       * makes `isInitialized()` return true.\n       */\n      if (this.component.onInstanceCreated) {\n        try {\n          this.component.onInstanceCreated(\n            this.container,\n            instanceIdentifier,\n            instance\n          );\n        } catch {\n          // ignore errors in the onInstanceCreatedCallback\n        }\n      }\n    }\n\n    return instance || null;\n  }\n\n  private normalizeInstanceIdentifier(\n    identifier: string = DEFAULT_ENTRY_NAME\n  ): string {\n    if (this.component) {\n      return this.component.multipleInstances ? identifier : DEFAULT_ENTRY_NAME;\n    } else {\n      return identifier; // assume multiple instances are supported before the component is provided.\n    }\n  }\n\n  private shouldAutoInitialize(): boolean {\n    return (\n      !!this.component &&\n      this.component.instantiationMode !== InstantiationMode.EXPLICIT\n    );\n  }\n}\n\n// undefined should be passed to the service factory for the default instance\nfunction normalizeIdentifierForFactory(identifier: string): string | undefined {\n  return identifier === DEFAULT_ENTRY_NAME ? undefined : identifier;\n}\n\nfunction isComponentEager<T extends Name>(component: Component<T>): boolean {\n  return component.instantiationMode === InstantiationMode.EAGER;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Provider } from './provider';\nimport { Component } from './component';\nimport { Name } from './types';\n\n/**\n * ComponentContainer that provides Providers for service name T, e.g. `auth`, `auth-internal`\n */\nexport class ComponentContainer {\n  private readonly providers = new Map<string, Provider<Name>>();\n\n  constructor(private readonly name: string) {}\n\n  /**\n   *\n   * @param component Component being added\n   * @param overwrite When a component with the same name has already been registered,\n   * if overwrite is true: overwrite the existing component with the new component and create a new\n   * provider with the new component. It can be useful in tests where you want to use different mocks\n   * for different tests.\n   * if overwrite is false: throw an exception\n   */\n  addComponent<T extends Name>(component: Component<T>): void {\n    const provider = this.getProvider(component.name);\n    if (provider.isComponentSet()) {\n      throw new Error(\n        `Component ${component.name} has already been registered with ${this.name}`\n      );\n    }\n\n    provider.setComponent(component);\n  }\n\n  addOrOverwriteComponent<T extends Name>(component: Component<T>): void {\n    const provider = this.getProvider(component.name);\n    if (provider.isComponentSet()) {\n      // delete the existing provider from the container, so we can register the new component\n      this.providers.delete(component.name);\n    }\n\n    this.addComponent(component);\n  }\n\n  /**\n   * getProvider provides a type safe interface where it can only be called with a field name\n   * present in NameServiceMapping interface.\n   *\n   * Firebase SDKs providing services should extend NameServiceMapping interface to register\n   * themselves.\n   */\n  getProvider<T extends Name>(name: T): Provider<T> {\n    if (this.providers.has(name)) {\n      return (this.providers.get(name) as unknown) as Provider<T>;\n    }\n\n    // create a Provider for a service that hasn't registered with Firebase\n    const provider = new Provider<T>(name, this);\n    this.providers.set(name, (provider as unknown) as Provider<Name>);\n\n    return provider as Provider<T>;\n  }\n\n  getProviders(): Array<Provider<Name>> {\n    return Array.from(this.providers.values());\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport type LogLevelString =\n  | 'debug'\n  | 'verbose'\n  | 'info'\n  | 'warn'\n  | 'error'\n  | 'silent';\n\nexport interface LogOptions {\n  level: LogLevelString;\n}\n\nexport type LogCallback = (callbackParams: LogCallbackParams) => void;\n\nexport interface LogCallbackParams {\n  level: LogLevelString;\n  message: string;\n  args: unknown[];\n  type: string;\n}\n\n/**\n * A container for all of the Logger instances\n */\nexport const instances: Logger[] = [];\n\n/**\n * The JS SDK supports 5 log levels and also allows a user the ability to\n * silence the logs altogether.\n *\n * The order is a follows:\n * DEBUG < VERBOSE < INFO < WARN < ERROR\n *\n * All of the log types above the current log level will be captured (i.e. if\n * you set the log level to `INFO`, errors will still be logged, but `DEBUG` and\n * `VERBOSE` logs will not)\n */\nexport enum LogLevel {\n  DEBUG,\n  VERBOSE,\n  INFO,\n  WARN,\n  ERROR,\n  SILENT\n}\n\nconst levelStringToEnum: { [key in LogLevelString]: LogLevel } = {\n  'debug': LogLevel.DEBUG,\n  'verbose': LogLevel.VERBOSE,\n  'info': LogLevel.INFO,\n  'warn': LogLevel.WARN,\n  'error': LogLevel.ERROR,\n  'silent': LogLevel.SILENT\n};\n\n/**\n * The default log level\n */\nconst defaultLogLevel: LogLevel = LogLevel.INFO;\n\n/**\n * We allow users the ability to pass their own log handler. We will pass the\n * type of log, the current log level, and any other arguments passed (i.e. the\n * messages that the user wants to log) to this function.\n */\nexport type LogHandler = (\n  loggerInstance: Logger,\n  logType: LogLevel,\n  ...args: unknown[]\n) => void;\n\n/**\n * By default, `console.debug` is not displayed in the developer console (in\n * chrome). To avoid forcing users to have to opt-in to these logs twice\n * (i.e. once for firebase, and once in the console), we are sending `DEBUG`\n * logs to the `console.log` function.\n */\nconst ConsoleMethod = {\n  [LogLevel.DEBUG]: 'log',\n  [LogLevel.VERBOSE]: 'log',\n  [LogLevel.INFO]: 'info',\n  [LogLevel.WARN]: 'warn',\n  [LogLevel.ERROR]: 'error'\n};\n\n/**\n * The default log handler will forward DEBUG, VERBOSE, INFO, WARN, and ERROR\n * messages on to their corresponding console counterparts (if the log method\n * is supported by the current log level)\n */\nconst defaultLogHandler: LogHandler = (instance, logType, ...args): void => {\n  if (logType < instance.logLevel) {\n    return;\n  }\n  const now = new Date().toISOString();\n  const method = ConsoleMethod[logType as keyof typeof ConsoleMethod];\n  if (method) {\n    console[method as 'log' | 'info' | 'warn' | 'error'](\n      `[${now}]  ${instance.name}:`,\n      ...args\n    );\n  } else {\n    throw new Error(\n      `Attempted to log a message with an invalid logType (value: ${logType})`\n    );\n  }\n};\n\nexport class Logger {\n  /**\n   * Gives you an instance of a Logger to capture messages according to\n   * Firebase's logging scheme.\n   *\n   * @param name The name that the logs will be associated with\n   */\n  constructor(public name: string) {\n    /**\n     * Capture the current instance for later use\n     */\n    instances.push(this);\n  }\n\n  /**\n   * The log level of the given Logger instance.\n   */\n  private _logLevel = defaultLogLevel;\n\n  get logLevel(): LogLevel {\n    return this._logLevel;\n  }\n\n  set logLevel(val: LogLevel) {\n    if (!(val in LogLevel)) {\n      throw new TypeError(`Invalid value \"${val}\" assigned to \\`logLevel\\``);\n    }\n    this._logLevel = val;\n  }\n\n  // Workaround for setter/getter having to be the same type.\n  setLogLevel(val: LogLevel | LogLevelString): void {\n    this._logLevel = typeof val === 'string' ? levelStringToEnum[val] : val;\n  }\n\n  /**\n   * The main (internal) log handler for the Logger instance.\n   * Can be set to a new function in internal package code but not by user.\n   */\n  private _logHandler: LogHandler = defaultLogHandler;\n  get logHandler(): LogHandler {\n    return this._logHandler;\n  }\n  set logHandler(val: LogHandler) {\n    if (typeof val !== 'function') {\n      throw new TypeError('Value assigned to `logHandler` must be a function');\n    }\n    this._logHandler = val;\n  }\n\n  /**\n   * The optional, additional, user-defined log handler for the Logger instance.\n   */\n  private _userLogHandler: LogHandler | null = null;\n  get userLogHandler(): LogHandler | null {\n    return this._userLogHandler;\n  }\n  set userLogHandler(val: LogHandler | null) {\n    this._userLogHandler = val;\n  }\n\n  /**\n   * The functions below are all based on the `console` interface\n   */\n\n  debug(...args: unknown[]): void {\n    this._userLogHandler && this._userLogHandler(this, LogLevel.DEBUG, ...args);\n    this._logHandler(this, LogLevel.DEBUG, ...args);\n  }\n  log(...args: unknown[]): void {\n    this._userLogHandler &&\n      this._userLogHandler(this, LogLevel.VERBOSE, ...args);\n    this._logHandler(this, LogLevel.VERBOSE, ...args);\n  }\n  info(...args: unknown[]): void {\n    this._userLogHandler && this._userLogHandler(this, LogLevel.INFO, ...args);\n    this._logHandler(this, LogLevel.INFO, ...args);\n  }\n  warn(...args: unknown[]): void {\n    this._userLogHandler && this._userLogHandler(this, LogLevel.WARN, ...args);\n    this._logHandler(this, LogLevel.WARN, ...args);\n  }\n  error(...args: unknown[]): void {\n    this._userLogHandler && this._userLogHandler(this, LogLevel.ERROR, ...args);\n    this._logHandler(this, LogLevel.ERROR, ...args);\n  }\n}\n\nexport function setLogLevel(level: LogLevelString | LogLevel): void {\n  instances.forEach(inst => {\n    inst.setLogLevel(level);\n  });\n}\n\nexport function setUserLogHandler(\n  logCallback: LogCallback | null,\n  options?: LogOptions\n): void {\n  for (const instance of instances) {\n    let customLogLevel: LogLevel | null = null;\n    if (options && options.level) {\n      customLogLevel = levelStringToEnum[options.level];\n    }\n    if (logCallback === null) {\n      instance.userLogHandler = null;\n    } else {\n      instance.userLogHandler = (\n        instance: Logger,\n        level: LogLevel,\n        ...args: unknown[]\n      ) => {\n        const message = args\n          .map(arg => {\n            if (arg == null) {\n              return null;\n            } else if (typeof arg === 'string') {\n              return arg;\n            } else if (typeof arg === 'number' || typeof arg === 'boolean') {\n              return arg.toString();\n            } else if (arg instanceof Error) {\n              return arg.message;\n            } else {\n              try {\n                return JSON.stringify(arg);\n              } catch (ignored) {\n                return null;\n              }\n            }\n          })\n          .filter(arg => arg)\n          .join(' ');\n        if (level >= (customLogLevel ?? instance.logLevel)) {\n          logCallback({\n            level: LogLevel[level].toLowerCase() as LogLevelString,\n            message,\n            args,\n            type: instance.name\n          });\n        }\n      };\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  ComponentContainer,\n  ComponentType,\n  Provider,\n  Name\n} from '@firebase/component';\nimport { PlatformLoggerService, VersionService } from './types';\n\nexport class PlatformLoggerServiceImpl implements PlatformLoggerService {\n  constructor(private readonly container: ComponentContainer) {}\n  // In initial implementation, this will be called by installations on\n  // auth token refresh, and installations will send this string.\n  getPlatformInfoString(): string {\n    const providers = this.container.getProviders();\n    // Loop through providers and get library/version pairs from any that are\n    // version components.\n    return providers\n      .map(provider => {\n        if (isVersionServiceProvider(provider)) {\n          const service = provider.getImmediate() as VersionService;\n          return `${service.library}/${service.version}`;\n        } else {\n          return null;\n        }\n      })\n      .filter(logString => logString)\n      .join(' ');\n  }\n}\n/**\n *\n * @param provider check if this provider provides a VersionService\n *\n * NOTE: Using Provider<'app-version'> is a hack to indicate that the provider\n * provides VersionService. The provider is not necessarily a 'app-version'\n * provider.\n */\nfunction isVersionServiceProvider(provider: Provider<Name>): boolean {\n  const component = provider.getComponent();\n  return component?.type === ComponentType.VERSION;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Logger } from '@firebase/logger';\n\nexport const logger = new Logger('@firebase/app');\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { name as appName } from '../package.json';\nimport { name as appCompatName } from '../../app-compat/package.json';\nimport { name as analyticsCompatName } from '../../../packages/analytics-compat/package.json';\nimport { name as analyticsName } from '../../../packages/analytics/package.json';\nimport { name as appCheckCompatName } from '../../../packages/app-check-compat/package.json';\nimport { name as appCheckName } from '../../../packages/app-check/package.json';\nimport { name as authName } from '../../../packages/auth/package.json';\nimport { name as authCompatName } from '../../../packages/auth-compat/package.json';\nimport { name as databaseName } from '../../../packages/database/package.json';\nimport { name as databaseCompatName } from '../../../packages/database-compat/package.json';\nimport { name as functionsName } from '../../../packages/functions/package.json';\nimport { name as functionsCompatName } from '../../../packages/functions-compat/package.json';\nimport { name as installationsName } from '../../../packages/installations/package.json';\nimport { name as installationsCompatName } from '../../../packages/installations-compat/package.json';\nimport { name as messagingName } from '../../../packages/messaging/package.json';\nimport { name as messagingCompatName } from '../../../packages/messaging-compat/package.json';\nimport { name as performanceName } from '../../../packages/performance/package.json';\nimport { name as performanceCompatName } from '../../../packages/performance-compat/package.json';\nimport { name as remoteConfigName } from '../../../packages/remote-config/package.json';\nimport { name as remoteConfigCompatName } from '../../../packages/remote-config-compat/package.json';\nimport { name as storageName } from '../../../packages/storage/package.json';\nimport { name as storageCompatName } from '../../../packages/storage-compat/package.json';\nimport { name as firestoreName } from '../../../packages/firestore/package.json';\nimport { name as firestoreCompatName } from '../../../packages/firestore-compat/package.json';\nimport { name as packageName } from '../../../packages/firebase/package.json';\n\n/**\n * The default app name\n *\n * @internal\n */\nexport const DEFAULT_ENTRY_NAME = '[DEFAULT]';\n\nexport const PLATFORM_LOG_STRING = {\n  [appName]: 'fire-core',\n  [appCompatName]: 'fire-core-compat',\n  [analyticsName]: 'fire-analytics',\n  [analyticsCompatName]: 'fire-analytics-compat',\n  [appCheckName]: 'fire-app-check',\n  [appCheckCompatName]: 'fire-app-check-compat',\n  [authName]: 'fire-auth',\n  [authCompatName]: 'fire-auth-compat',\n  [databaseName]: 'fire-rtdb',\n  [databaseCompatName]: 'fire-rtdb-compat',\n  [functionsName]: 'fire-fn',\n  [functionsCompatName]: 'fire-fn-compat',\n  [installationsName]: 'fire-iid',\n  [installationsCompatName]: 'fire-iid-compat',\n  [messagingName]: 'fire-fcm',\n  [messagingCompatName]: 'fire-fcm-compat',\n  [performanceName]: 'fire-perf',\n  [performanceCompatName]: 'fire-perf-compat',\n  [remoteConfigName]: 'fire-rc',\n  [remoteConfigCompatName]: 'fire-rc-compat',\n  [storageName]: 'fire-gcs',\n  [storageCompatName]: 'fire-gcs-compat',\n  [firestoreName]: 'fire-fst',\n  [firestoreCompatName]: 'fire-fst-compat',\n  'fire-js': 'fire-js', // Platform identifier for JS SDK.\n  [packageName]: 'fire-js-all'\n} as const;\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseApp } from './public-types';\nimport { Component, Provider, Name } from '@firebase/component';\nimport { logger } from './logger';\nimport { DEFAULT_ENTRY_NAME } from './constants';\nimport { FirebaseAppImpl } from './firebaseApp';\n\n/**\n * @internal\n */\nexport const _apps = new Map<string, FirebaseApp>();\n\n/**\n * Registered components.\n *\n * @internal\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport const _components = new Map<string, Component<any>>();\n\n/**\n * @param component - the component being added to this app's container\n *\n * @internal\n */\nexport function _addComponent<T extends Name>(\n  app: FirebaseApp,\n  component: Component<T>\n): void {\n  try {\n    (app as FirebaseAppImpl).container.addComponent(component);\n  } catch (e) {\n    logger.debug(\n      `Component ${component.name} failed to register with FirebaseApp ${app.name}`,\n      e\n    );\n  }\n}\n\n/**\n *\n * @internal\n */\nexport function _addOrOverwriteComponent(\n  app: FirebaseApp,\n  component: Component\n): void {\n  (app as FirebaseAppImpl).container.addOrOverwriteComponent(component);\n}\n\n/**\n *\n * @param component - the component to register\n * @returns whether or not the component is registered successfully\n *\n * @internal\n */\nexport function _registerComponent<T extends Name>(\n  component: Component<T>\n): boolean {\n  const componentName = component.name;\n  if (_components.has(componentName)) {\n    logger.debug(\n      `There were multiple attempts to register component ${componentName}.`\n    );\n\n    return false;\n  }\n\n  _components.set(componentName, component);\n\n  // add the component to existing app instances\n  for (const app of _apps.values()) {\n    _addComponent(app as FirebaseAppImpl, component);\n  }\n\n  return true;\n}\n\n/**\n *\n * @param app - FirebaseApp instance\n * @param name - service name\n *\n * @returns the provider for the service with the matching name\n *\n * @internal\n */\nexport function _getProvider<T extends Name>(\n  app: FirebaseApp,\n  name: T\n): Provider<T> {\n  return (app as FirebaseAppImpl).container.getProvider(name);\n}\n\n/**\n *\n * @param app - FirebaseApp instance\n * @param name - service name\n * @param instanceIdentifier - service instance identifier in case the service supports multiple instances\n *\n * @internal\n */\nexport function _removeServiceInstance<T extends Name>(\n  app: FirebaseApp,\n  name: T,\n  instanceIdentifier: string = DEFAULT_ENTRY_NAME\n): void {\n  _getProvider(app, name).clearInstance(instanceIdentifier);\n}\n\n/**\n * Test only\n *\n * @internal\n */\nexport function _clearComponents(): void {\n  _components.clear();\n}\n\n/**\n * Exported in order to be used in app-compat package\n */\nexport { DEFAULT_ENTRY_NAME as _DEFAULT_ENTRY_NAME };\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ErrorFactory, ErrorMap } from '@firebase/util';\n\nexport const enum AppError {\n  NO_APP = 'no-app',\n  BAD_APP_NAME = 'bad-app-name',\n  DUPLICATE_APP = 'duplicate-app',\n  APP_DELETED = 'app-deleted',\n  INVALID_APP_ARGUMENT = 'invalid-app-argument',\n  INVALID_LOG_ARGUMENT = 'invalid-log-argument'\n}\n\nconst ERRORS: ErrorMap<AppError> = {\n  [AppError.NO_APP]:\n    \"No Firebase App '{$appName}' has been created - \" +\n    'call Firebase App.initializeApp()',\n  [AppError.BAD_APP_NAME]: \"Illegal App name: '{$appName}\",\n  [AppError.DUPLICATE_APP]:\n    \"Firebase App named '{$appName}' already exists with different options or config\",\n  [AppError.APP_DELETED]: \"Firebase App named '{$appName}' already deleted\",\n  [AppError.INVALID_APP_ARGUMENT]:\n    'firebase.{$appName}() takes either no argument or a ' +\n    'Firebase App instance.',\n  [AppError.INVALID_LOG_ARGUMENT]:\n    'First argument to `onLog` must be null or a function.'\n};\n\ninterface ErrorParams {\n  [AppError.NO_APP]: { appName: string };\n  [AppError.BAD_APP_NAME]: { appName: string };\n  [AppError.DUPLICATE_APP]: { appName: string };\n  [AppError.APP_DELETED]: { appName: string };\n  [AppError.INVALID_APP_ARGUMENT]: { appName: string };\n}\n\nexport const ERROR_FACTORY = new ErrorFactory<AppError, ErrorParams>(\n  'app',\n  'Firebase',\n  ERRORS\n);\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  FirebaseApp,\n  FirebaseOptions,\n  FirebaseAppSettings\n} from './public-types';\nimport {\n  ComponentContainer,\n  Component,\n  ComponentType\n} from '@firebase/component';\nimport { ERROR_FACTORY, AppError } from './errors';\n\nexport class FirebaseAppImpl implements FirebaseApp {\n  private readonly _options: FirebaseOptions;\n  private readonly _name: string;\n  /**\n   * Original config values passed in as a constructor parameter.\n   * It is only used to compare with another config object to support idempotent initializeApp().\n   *\n   * Updating automaticDataCollectionEnabled on the App instance will not change its value in _config.\n   */\n  private readonly _config: Required<FirebaseAppSettings>;\n  private _automaticDataCollectionEnabled: boolean;\n  private _isDeleted = false;\n  private readonly _container: ComponentContainer;\n\n  constructor(\n    options: FirebaseOptions,\n    config: Required<FirebaseAppSettings>,\n    container: ComponentContainer\n  ) {\n    this._options = { ...options };\n    this._config = { ...config };\n    this._name = config.name;\n    this._automaticDataCollectionEnabled =\n      config.automaticDataCollectionEnabled;\n    this._container = container;\n    this.container.addComponent(\n      new Component('app', () => this, ComponentType.PUBLIC)\n    );\n  }\n\n  get automaticDataCollectionEnabled(): boolean {\n    this.checkDestroyed();\n    return this._automaticDataCollectionEnabled;\n  }\n\n  set automaticDataCollectionEnabled(val: boolean) {\n    this.checkDestroyed();\n    this._automaticDataCollectionEnabled = val;\n  }\n\n  get name(): string {\n    this.checkDestroyed();\n    return this._name;\n  }\n\n  get options(): FirebaseOptions {\n    this.checkDestroyed();\n    return this._options;\n  }\n\n  get config(): Required<FirebaseAppSettings> {\n    this.checkDestroyed();\n    return this._config;\n  }\n\n  get container(): ComponentContainer {\n    return this._container;\n  }\n\n  get isDeleted(): boolean {\n    return this._isDeleted;\n  }\n\n  set isDeleted(val: boolean) {\n    this._isDeleted = val;\n  }\n\n  /**\n   * This function will throw an Error if the App has already been deleted -\n   * use before performing API actions on the App.\n   */\n  private checkDestroyed(): void {\n    if (this.isDeleted) {\n      throw ERROR_FACTORY.create(AppError.APP_DELETED, { appName: this._name });\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  FirebaseApp,\n  FirebaseOptions,\n  FirebaseAppSettings\n} from './public-types';\nimport { DEFAULT_ENTRY_NAME, PLATFORM_LOG_STRING } from './constants';\nimport { ERROR_FACTORY, AppError } from './errors';\nimport {\n  ComponentContainer,\n  Component,\n  Name,\n  ComponentType\n} from '@firebase/component';\nimport { version } from '../../firebase/package.json';\nimport { FirebaseAppImpl } from './firebaseApp';\nimport { _apps, _components, _registerComponent } from './internal';\nimport { logger } from './logger';\nimport {\n  LogLevelString,\n  setLogLevel as setLogLevelImpl,\n  LogCallback,\n  LogOptions,\n  setUserLogHandler\n} from '@firebase/logger';\nimport { deepEqual } from '@firebase/util';\n\nexport { FirebaseError } from '@firebase/util';\n\n/**\n * The current SDK version.\n *\n * @public\n */\nexport const SDK_VERSION = version;\n\n/**\n * Creates and initializes a {@link @firebase/app#FirebaseApp} instance.\n *\n * See\n * {@link\n *   https://firebase.google.com/docs/web/setup#add_firebase_to_your_app\n *   | Add Firebase to your app} and\n * {@link\n *   https://firebase.google.com/docs/web/setup#multiple-projects\n *   | Initialize multiple projects} for detailed documentation.\n *\n * @example\n * ```javascript\n *\n * // Initialize default app\n * // Retrieve your own options values by adding a web app on\n * // https://console.firebase.google.com\n * initializeApp({\n *   apiKey: \"AIza....\",                             // Auth / General Use\n *   authDomain: \"YOUR_APP.firebaseapp.com\",         // Auth with popup/redirect\n *   databaseURL: \"https://YOUR_APP.firebaseio.com\", // Realtime Database\n *   storageBucket: \"YOUR_APP.appspot.com\",          // Storage\n *   messagingSenderId: \"123456789\"                  // Cloud Messaging\n * });\n * ```\n *\n * @example\n * ```javascript\n *\n * // Initialize another app\n * const otherApp = initializeApp({\n *   databaseURL: \"https://<OTHER_DATABASE_NAME>.firebaseio.com\",\n *   storageBucket: \"<OTHER_STORAGE_BUCKET>.appspot.com\"\n * }, \"otherApp\");\n * ```\n *\n * @param options - Options to configure the app's services.\n * @param name - Optional name of the app to initialize. If no name\n *   is provided, the default is `\"[DEFAULT]\"`.\n *\n * @returns The initialized app.\n *\n * @public\n */\nexport function initializeApp(\n  options: FirebaseOptions,\n  name?: string\n): FirebaseApp;\n/**\n * Creates and initializes a FirebaseApp instance.\n *\n * @param options - Options to configure the app's services.\n * @param config - FirebaseApp Configuration\n *\n * @public\n */\nexport function initializeApp(\n  options: FirebaseOptions,\n  config?: FirebaseAppSettings\n): FirebaseApp;\nexport function initializeApp(\n  options: FirebaseOptions,\n  rawConfig = {}\n): FirebaseApp {\n  if (typeof rawConfig !== 'object') {\n    const name = rawConfig;\n    rawConfig = { name };\n  }\n\n  const config: Required<FirebaseAppSettings> = {\n    name: DEFAULT_ENTRY_NAME,\n    automaticDataCollectionEnabled: false,\n    ...rawConfig\n  };\n  const name = config.name;\n\n  if (typeof name !== 'string' || !name) {\n    throw ERROR_FACTORY.create(AppError.BAD_APP_NAME, {\n      appName: String(name)\n    });\n  }\n\n  const existingApp = _apps.get(name) as FirebaseAppImpl;\n  if (existingApp) {\n    // return the existing app if options and config deep equal the ones in the existing app.\n    if (\n      deepEqual(options, existingApp.options) &&\n      deepEqual(config, existingApp.config)\n    ) {\n      return existingApp;\n    } else {\n      throw ERROR_FACTORY.create(AppError.DUPLICATE_APP, { appName: name });\n    }\n  }\n\n  const container = new ComponentContainer(name);\n  for (const component of _components.values()) {\n    container.addComponent(component);\n  }\n\n  const newApp = new FirebaseAppImpl(options, config, container);\n\n  _apps.set(name, newApp);\n\n  return newApp;\n}\n\n/**\n * Retrieves a {@link @firebase/app#FirebaseApp} instance.\n *\n * When called with no arguments, the default app is returned. When an app name\n * is provided, the app corresponding to that name is returned.\n *\n * An exception is thrown if the app being retrieved has not yet been\n * initialized.\n *\n * @example\n * ```javascript\n * // Return the default app\n * const app = getApp();\n * ```\n *\n * @example\n * ```javascript\n * // Return a named app\n * const otherApp = getApp(\"otherApp\");\n * ```\n *\n * @param name - Optional name of the app to return. If no name is\n *   provided, the default is `\"[DEFAULT]\"`.\n *\n * @returns The app corresponding to the provided app name.\n *   If no app name is provided, the default app is returned.\n *\n * @public\n */\nexport function getApp(name: string = DEFAULT_ENTRY_NAME): FirebaseApp {\n  const app = _apps.get(name);\n  if (!app) {\n    throw ERROR_FACTORY.create(AppError.NO_APP, { appName: name });\n  }\n\n  return app;\n}\n\n/**\n * A (read-only) array of all initialized apps.\n * @public\n */\nexport function getApps(): FirebaseApp[] {\n  return Array.from(_apps.values());\n}\n\n/**\n * Renders this app unusable and frees the resources of all associated\n * services.\n *\n * @example\n * ```javascript\n * deleteApp(app)\n *   .then(function() {\n *     console.log(\"App deleted successfully\");\n *   })\n *   .catch(function(error) {\n *     console.log(\"Error deleting app:\", error);\n *   });\n * ```\n *\n * @public\n */\nexport async function deleteApp(app: FirebaseApp): Promise<void> {\n  const name = app.name;\n  if (_apps.has(name)) {\n    _apps.delete(name);\n    await Promise.all(\n      (app as FirebaseAppImpl).container\n        .getProviders()\n        .map(provider => provider.delete())\n    );\n    (app as FirebaseAppImpl).isDeleted = true;\n  }\n}\n\n/**\n * Registers a library's name and version for platform logging purposes.\n * @param library - Name of 1p or 3p library (e.g. firestore, angularfire)\n * @param version - Current version of that library.\n * @param variant - Bundle variant, e.g., node, rn, etc.\n *\n * @public\n */\nexport function registerVersion(\n  libraryKeyOrName: string,\n  version: string,\n  variant?: string\n): void {\n  // TODO: We can use this check to whitelist strings when/if we set up\n  // a good whitelist system.\n  let library = PLATFORM_LOG_STRING[libraryKeyOrName] ?? libraryKeyOrName;\n  if (variant) {\n    library += `-${variant}`;\n  }\n  const libraryMismatch = library.match(/\\s|\\//);\n  const versionMismatch = version.match(/\\s|\\//);\n  if (libraryMismatch || versionMismatch) {\n    const warning = [\n      `Unable to register library \"${library}\" with version \"${version}\":`\n    ];\n    if (libraryMismatch) {\n      warning.push(\n        `library name \"${library}\" contains illegal characters (whitespace or \"/\")`\n      );\n    }\n    if (libraryMismatch && versionMismatch) {\n      warning.push('and');\n    }\n    if (versionMismatch) {\n      warning.push(\n        `version name \"${version}\" contains illegal characters (whitespace or \"/\")`\n      );\n    }\n    logger.warn(warning.join(' '));\n    return;\n  }\n  _registerComponent(\n    new Component(\n      `${library}-version` as Name,\n      () => ({ library, version }),\n      ComponentType.VERSION\n    )\n  );\n}\n\n/**\n * Sets log handler for all Firebase SDKs.\n * @param logCallback - An optional custom log handler that executes user code whenever\n * the Firebase SDK makes a logging call.\n *\n * @public\n */\nexport function onLog(\n  logCallback: LogCallback | null,\n  options?: LogOptions\n): void {\n  if (logCallback !== null && typeof logCallback !== 'function') {\n    throw ERROR_FACTORY.create(AppError.INVALID_LOG_ARGUMENT);\n  }\n  setUserLogHandler(logCallback, options);\n}\n\n/**\n * Sets log level for all Firebase SDKs.\n *\n * All of the log types above the current log level are captured (i.e. if\n * you set the log level to `info`, errors are logged, but `debug` and\n * `verbose` logs are not).\n *\n * @public\n */\nexport function setLogLevel(logLevel: LogLevelString): void {\n  setLogLevelImpl(logLevel);\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, ComponentType } from '@firebase/component';\nimport { PlatformLoggerServiceImpl } from './platformLoggerService';\nimport { name, version } from '../package.json';\nimport { _registerComponent } from './internal';\nimport { registerVersion } from './api';\n\nexport function registerCoreComponents(variant?: string): void {\n  _registerComponent(\n    new Component(\n      'platform-logger',\n      container => new PlatformLoggerServiceImpl(container),\n      ComponentType.PRIVATE\n    )\n  );\n\n  // Register `app` package.\n  registerVersion(name, version, variant);\n  // Register platform SDK identifier (no version).\n  registerVersion('fire-js', '');\n}\n","/**\n * Firebase App\n *\n * @remarks This package coordinates the communication between the different Firebase components\n * @packageDocumentation\n */\n\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { registerCoreComponents } from './registerCoreComponents';\n\nexport * from './api';\nexport * from './internal';\nexport * from './public-types';\n\nregisterCoreComponents();\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { registerVersion } from '@firebase/app';\nimport { name, version } from '../package.json';\n\nregisterVersion(name, version, 'cdn');\nexport * from '@firebase/app';\n"]},"metadata":{},"sourceType":"module"}